# Default values for moneytree.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
dependencies:
  miraclegrow:
    enable: true
  postgresql:
    enable: true
  grafana:
    enable: true

moneytree:
  # Don't take fees into account when calculating spread
  disableFees: false
  # Force orders to reject if they'd be a taker order
  forceMakerOrders: false
  # Enable debug logging
  enableDebugLogs: false
  # Maximum number of orders that the system will keep open before rotating them
  maxOpenPairs: 4
  # Percentage return to target
  targetReturn: 0.001
  # Enable loss mitigator routines
  enableLossMitigator: no
  # Percentage of the second price to bail at
  bailPercentage: 0.05

  coinbase:
    # Forces the app to use the sandbox
    useSandbox: true

    # Coinbase Credentials
    key: YOUR COINBASE PRO KEY
    passphrase: YOUR COINBASE PASSPHRASE
    secret: YOUR COINBASE SECRET
  
  postgresql:
    database: moneytree
    password: password

  image:
    repository: hub.sinimini.com/docker/moneytree
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    annotations: {}
    type: ClusterIP
    port: 44444
    clusterIP:

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}

  resources:
    limits:
      memory: 2Gi

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  postgresqlPassword: password
  postgresqlDatabase: moneytree

grafana:
  adminPassword: password
  rbac:
    create: no
    pspEnabled: no
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Postgres
        type: postgres
        isDefault: yes
        url: moneytree-postgresql:5432
        database: moneytree
        user: postgres
        secureJsonData:
          password: password
        jsonData:
          sslmode: "disable" # disable/require/verify-ca/verify-full
          maxOpenConns: 0         # Grafana v5.4+
          maxIdleConns: 2         # Grafana v5.4+
          connMaxLifetime: 14400  # Grafana v5.4+
          postgresVersion: 1200 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
          timescaledb: false
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      metrics: 
        json: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": "-- Grafana --",
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "name": "Annotations & Alerts",
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "iteration": 1624810908153,
            "links": [],
            "panels": [
              {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                  "h": 1,
                  "w": 24,
                  "x": 0,
                  "y": 0
                },
                "id": 14,
                "panels": [],
                "title": "Gauges",
                "type": "row"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 0,
                  "y": 1
                },
                "id": 8,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"totalReturn\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Total Return (estimated)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 6,
                  "y": 1
                },
                "id": 10,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"fees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"usdReturn\" - \"fees\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "USD Return",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 12,
                  "y": 1
                },
                "id": 16,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"fees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"btcReturn\" * \"firstPrice\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "BTC Return (USD)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 18,
                  "y": 1
                },
                "id": 37,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n),\nsuccessful as (\n  select\n    count(uuid) as total\n  from\n    pairs\n  where\n    status = 'SUCCESS'\n)\nselect\n  sum(\"totalReturn\") / avg(successful.total) as \"returns\"\nfrom pairs, successful",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Avg Return (estimated)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 0
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 1
                        },
                        {
                          "color": "#EAB839",
                          "value": 30
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 35
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 0,
                  "y": 7
                },
                "id": 18,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "SELECT\n  count(1) as \"Open Orders\"\nfrom\n  orderpairs\nWHERE\n    (data->>'status') = 'OPEN'",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Open Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "#EAB839",
                          "value": 15
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 18
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 3,
                  "y": 7
                },
                "id": 39,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "SELECT\n  count(1) as \"Open Orders\"\nfrom\n  orderpairs\nWHERE\n    (data->>'status') = 'OPEN'\n    and\n    data->>'direction' = 'UP'",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Upward Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "#EAB839",
                          "value": 15
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 18
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 6,
                  "y": 7
                },
                "id": 40,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "SELECT\n  count(1) as \"Open Orders\"\nfrom\n  orderpairs\nWHERE\n    (data->>'status') = 'OPEN'\n    and\n    data->>'direction' = 'DOWN'",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Downward Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 9,
                  "y": 7
                },
                "id": 20,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"pairs\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Successful Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "#EAB839",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 12,
                  "y": 7
                },
                "id": 24,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('CANCELED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"pairs\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Canceled Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 15,
                  "y": 7
                },
                "id": 22,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('REVERSED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"pairs\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reversed Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 18,
                  "y": 7
                },
                "id": 28,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"pairs\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Failed Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "noValue": "0",
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 3,
                  "x": 21,
                  "y": 7
                },
                "id": 26,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('BROKEN')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"pairs\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Broken Pairs",
                "type": "stat"
              },
              {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                  "h": 1,
                  "w": 24,
                  "x": 0,
                  "y": 13
                },
                "id": 12,
                "panels": [],
                "title": "Graphs",
                "type": "row"
              },
              {
                "aliasColors": {},
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": null,
                "decimals": 2,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "filterable": false
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                  "h": 9,
                  "w": 12,
                  "x": 0,
                  "y": 14
                },
                "hiddenSeries": false,
                "id": 30,
                "interval": "",
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": true,
                  "values": true
                },
                "lines": false,
                "linewidth": 1,
                "nullPointMode": "null as zero",
                "options": {
                  "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.3.5",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                  {
                    "$$hashKey": "object:709",
                    "alias": "Gains",
                    "color": "#56A64B"
                  },
                  {
                    "$$hashKey": "object:710",
                    "alias": "Losses",
                    "color": "#E02F44"
                  }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": true,
                "targets": [
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n),\ntimetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n)\nselect\n  *\nfrom (\n  select\n  \t$__timeGroup(\"time\", $interval) as \"time\",\n  \tsum(\"returns\") as \"Losses\"\n  from (\n  \tselect\n  \t\ttimetbl.\"startTime\" as \"time\",\n  \t\tsum(pairs.\"totalReturn\") as \"returns\"\n  \tfrom\n  \t\ttimetbl\n  \tleft join\n  \t\tpairs\n  \ton\n  \t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n  \tgroup by \"time\"\n  ) as counts\n  group by $__timeGroup(\"time\", $interval)\n  order by $__timeGroup(\"time\", $interval)\n) as result\nwhere \"Losses\" <= 0",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n),\ntimetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n)\nselect\n  *\nfrom (\n  select\n  \t$__timeGroup(\"time\", $interval) as \"time\",\n  \tsum(\"returns\") as \"Gains\"\n  from (\n  \tselect\n  \t\ttimetbl.\"startTime\" as \"time\",\n  \t\tsum(pairs.\"totalReturn\") as \"returns\"\n  \tfrom\n  \t\ttimetbl\n  \tleft join\n  \t\tpairs\n  \ton\n  \t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n  \tgroup by \"time\"\n  ) as counts\n  group by $__timeGroup(\"time\", $interval)\n  order by $__timeGroup(\"time\", $interval)\n) as result\nwhere \"Gains\" >= 0",
                    "refId": "B",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Gains & Losses",
                "tooltip": {
                  "shared": false,
                  "sort": 0,
                  "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                  "buckets": null,
                  "mode": "time",
                  "name": null,
                  "show": true,
                  "values": []
                },
                "yaxes": [
                  {
                    "decimals": null,
                    "format": "currencyUSD",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ],
                "yaxis": {
                  "align": false,
                  "alignLevel": null
                }
              },
              {
                "aliasColors": {},
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": null,
                "decimals": 0,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "filterable": false
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                  "h": 9,
                  "w": 12,
                  "x": 12,
                  "y": 14
                },
                "hiddenSeries": false,
                "id": 32,
                "interval": "",
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": true,
                  "values": true
                },
                "lines": false,
                "linewidth": 1,
                "nullPointMode": "null as zero",
                "options": {
                  "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.3.5",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                  {
                    "$$hashKey": "object:793",
                    "alias": "Failed",
                    "color": "#FF7383",
                    "zindex": -2
                  },
                  {
                    "$$hashKey": "object:794",
                    "alias": "Success",
                    "color": "#56A64B",
                    "zindex": 1
                  },
                  {
                    "$$hashKey": "object:795",
                    "alias": "Canceled",
                    "color": "#F2CC0C"
                  },
                  {
                    "$$hashKey": "object:796",
                    "alias": "Reversed",
                    "color": "#C4162A",
                    "zindex": -3
                  },
                  {
                    "$$hashKey": "object:797",
                    "alias": "Broken",
                    "color": "#A352CC",
                    "zindex": 3
                  }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": true,
                "targets": [
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' = 'FAILED'\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Failed\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' = 'SUCCESS'\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Success\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "B",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' = 'CANCELED'\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Canceled\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "C",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' = 'REVERSED'\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Reversed\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "D",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' = 'BROKEN'\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Broken\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"endedAt\" >= timetbl.\"startTime\" and pairs.\"endedAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "E",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Completed Pairs",
                "tooltip": {
                  "shared": true,
                  "sort": 2,
                  "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                  "buckets": null,
                  "mode": "time",
                  "name": null,
                  "show": true,
                  "values": []
                },
                "yaxes": [
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ],
                "yaxis": {
                  "align": false,
                  "alignLevel": null
                }
              },
              {
                "aliasColors": {},
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": null,
                "decimals": 0,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "filterable": false
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                  "h": 9,
                  "w": 12,
                  "x": 0,
                  "y": 23
                },
                "hiddenSeries": false,
                "id": 34,
                "interval": "",
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": true,
                  "values": true
                },
                "lines": false,
                "linewidth": 1,
                "nullPointMode": "null as zero",
                "options": {
                  "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.3.5",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                  {
                    "$$hashKey": "object:511",
                    "alias": "Up",
                    "color": "#FFCB7D",
                    "zindex": 1
                  },
                  {
                    "$$hashKey": "object:512",
                    "alias": "Down",
                    "color": "#FA6400",
                    "transform": "negative-Y"
                  }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' not in ('CANCELED', 'FAILED')\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n\tand\n\t\t\"direction\" = 'DOWN'\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Down\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"createdAt\" >= timetbl.\"startTime\" and pairs.\"createdAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '60 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' not in ('CANCELED', 'FAILED')\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n\tand\n\t\t\"direction\" = 'UP'\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tsum(\"placed\") as \"Up\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"placed\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\tpairs.\"createdAt\" >= timetbl.\"startTime\" and pairs.\"createdAt\" <= timetbl.\"endTime\"\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "B",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Placed Pairs",
                "tooltip": {
                  "shared": true,
                  "sort": 0,
                  "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                  "buckets": null,
                  "mode": "time",
                  "name": null,
                  "show": true,
                  "values": []
                },
                "yaxes": [
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ],
                "yaxis": {
                  "align": false,
                  "alignLevel": null
                }
              },
              {
                "aliasColors": {},
                "bars": true,
                "dashLength": 10,
                "dashes": false,
                "datasource": null,
                "decimals": 0,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "filterable": false
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 269
                        }
                      ]
                    }
                  ]
                },
                "fill": 2,
                "fillGradient": 0,
                "gridPos": {
                  "h": 9,
                  "w": 12,
                  "x": 12,
                  "y": 23
                },
                "hiddenSeries": false,
                "id": 36,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": true,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": true
                },
                "lines": false,
                "linewidth": 1,
                "nullPointMode": "null as zero",
                "options": {
                  "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.3.5",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                  {
                    "$$hashKey": "object:42",
                    "alias": "Down",
                    "color": "#FA6400",
                    "transform": "negative-Y"
                  },
                  {
                    "$$hashKey": "object:43",
                    "alias": "Up",
                    "color": "#FFCB7D",
                    "zindex": 1
                  }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": true,
                "targets": [
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '10 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' in ('OPEN', 'SUCCESS', 'REVERSED', 'CANCELED')\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n\tand\n\t\t\"direction\" = 'DOWN'\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tmax(\"open\") as \"Down\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"open\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\ttimetbl.tsrange && pairs.tsrange\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  },
                  {
                    "format": "time_series",
                    "group": [],
                    "hide": false,
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with timetbl as (\n  select\n\t\"startTime\", \n\t\"endTime\",\n    tsrange(\"startTime\", \"endTime\") as \"tsrange\"\n  from (\n  \tselect distinct\n  \t\tlag(t.dt) over (order by t.dt) as \"startTime\",\n  \t\tt.dt as \"endTime\"\n  \tfrom (\n  \t\tselect\n  \t\t\tts::timestamp as dt\n  \t\tfrom\n  \t\t\tgenerate_series($__timeFrom(), $__timeTo(), INTERVAL '10 second') ts\n  \t) as t\n  \torder by\n  \t\"startTime\"\n  ) as times\n  where\n    \"startTime\" is not null\n), pairs as (\n\tselect\n\t\t\"uuid\",\n\t\t\"createdAt\",\n\t\t\"endedAt\",\n\t\t\"direction\",\n\t\t\"status\",\n\t\ttsrange(\"createdAt\", \"endedAt\") as \"tsrange\"\n\tfrom (\n\t\tselect\n\t\t\tuuid,\n\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\tcase\n\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\tend as \"endedAt\",\n\t\t\tdata->>'direction' as \"direction\",\n\t\t\tdata->>'status' as \"status\"\n\t\tfrom\n\t\t\torderpairs\n\t\twhere\n\t\t\tdata->>'status' in ('OPEN', 'SUCCESS', 'REVERSED', 'CANCELED')\n\t) as raw_pairs\n\twhere\n\t\ttsrange(\"createdAt\", \"endedAt\") && tsrange($__timeFrom(), $__timeTo())\n\tand\n\t\t\"direction\" = 'UP'\n)\nselect\n\t$__timeGroup(\"time\", $interval) as \"time\",\n\tmax(\"open\") as \"Up\"\nfrom (\n\tselect\n\t\ttimetbl.\"startTime\" as \"time\",\n\t\tcount(pairs.uuid) as \"open\"\n\tfrom\n\t\ttimetbl\n\tleft join\n\t\tpairs\n\ton\n\t\ttimetbl.tsrange && pairs.tsrange\n\tgroup by \"time\"\n) as counts\ngroup by $__timeGroup(\"time\", $interval)\norder by $__timeGroup(\"time\", $interval)",
                    "refId": "B",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Max Open Pairs",
                "tooltip": {
                  "shared": true,
                  "sort": 0,
                  "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                  "buckets": null,
                  "mode": "time",
                  "name": null,
                  "show": true,
                  "values": []
                },
                "yaxes": [
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ],
                "yaxis": {
                  "align": false,
                  "alignLevel": null
                }
              }
            ],
            "refresh": "1m",
            "schemaVersion": 26,
            "style": "dark",
            "tags": [],
            "templating": {
              "list": [
                {
                  "auto": true,
                  "auto_count": 30,
                  "auto_min": "1m",
                  "current": {
                    "selected": false,
                    "text": "1h",
                    "value": "1h"
                  },
                  "error": null,
                  "hide": 0,
                  "label": null,
                  "name": "interval",
                  "options": [
                    {
                      "selected": false,
                      "text": "auto",
                      "value": "$__auto_interval_interval"
                    },
                    {
                      "selected": false,
                      "text": "1m",
                      "value": "1m"
                    },
                    {
                      "selected": false,
                      "text": "10m",
                      "value": "10m"
                    },
                    {
                      "selected": false,
                      "text": "30m",
                      "value": "30m"
                    },
                    {
                      "selected": true,
                      "text": "1h",
                      "value": "1h"
                    },
                    {
                      "selected": false,
                      "text": "6h",
                      "value": "6h"
                    },
                    {
                      "selected": false,
                      "text": "12h",
                      "value": "12h"
                    },
                    {
                      "selected": false,
                      "text": "1d",
                      "value": "1d"
                    },
                    {
                      "selected": false,
                      "text": "7d",
                      "value": "7d"
                    },
                    {
                      "selected": false,
                      "text": "14d",
                      "value": "14d"
                    },
                    {
                      "selected": false,
                      "text": "30d",
                      "value": "30d"
                    }
                  ],
                  "query": "1m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
                  "queryValue": "",
                  "refresh": 2,
                  "skipUrlSync": false,
                  "type": "interval"
                }
              ]
            },
            "time": {
              "from": "now-24h",
              "to": "now"
            },
            "timepicker": {},
            "timezone": "",
            "title": "Moneytree - Metrics",
            "uid": "a5c4GYEGk",
            "version": 4
          }
      pairs:
        json: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": "-- Grafana --",
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "limit": 100,
                  "name": "Annotations & Alerts",
                  "showIn": 0,
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 0,
            "links": [],
            "panels": [
              {
                "datasource": null,
                "gridPos": {
                  "h": 1,
                  "w": 24,
                  "x": 0,
                  "y": 0
                },
                "id": 50,
                "title": "Returns",
                "type": "row"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 0,
                  "y": 1
                },
                "id": 34,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"totalReturn\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Total Return (estimated)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 6,
                  "y": 1
                },
                "id": 38,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"usdReturn\" - \"fees\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "USD Return (Less Fees)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-red",
                          "value": null
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 12,
                  "y": 1
                },
                "id": 36,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(\"btcReturn\" * \"firstPrice\") as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "BTC Return (USD)",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "semi-dark-green",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 0
                        }
                      ]
                    },
                    "unit": "currencyUSD"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 6,
                  "x": 18,
                  "y": 1
                },
                "id": 48,
                "options": {
                  "colorMode": "value",
                  "graphMode": "area",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "sum"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS', 'REVERSED', 'CANCELED', 'FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  sum(fees) as \"returns\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Fees",
                "type": "stat"
              },
              {
                "collapsed": false,
                "datasource": null,
                "gridPos": {
                  "h": 1,
                  "w": 24,
                  "x": 0,
                  "y": 7
                },
                "id": 52,
                "panels": [],
                "title": "Pairs",
                "type": "row"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 0
                        },
                        {
                          "color": "semi-dark-green",
                          "value": 1
                        },
                        {
                          "color": "#EAB839",
                          "value": 3
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 5
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 8
                },
                "id": 3,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "SELECT\n  count(1) as \"Open Orders\"\nfrom\n  orderpairs\nWHERE\n    (data->>'status') = 'OPEN'",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Open Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 97
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 74
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 288
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 96
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 8
                },
                "id": 8,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "createdAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('OPEN')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t) as total_returns\n)\nselect\n  \"uuid\",\n  \"createdAt\",\n  \"direction\",\n  \"buyStatus\",\n  \"sellStatus\",\n  case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n  case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n  case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n  case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n  case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n  case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n  case when \"fees\" <> '0' then \"fees\" end as \"fees\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Open Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 14
                },
                "id": 5,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1) as \"Open Orders\"\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Successful Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 79
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 288
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFunds"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 101
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 14
                },
                "id": 42,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "endedAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('SUCCESS')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Successful Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 20
                },
                "id": 28,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('REVERSED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1)\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reversed Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 242
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 84
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 101
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 288
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFunds"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 91
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 20
                },
                "id": 43,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "endedAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('REVERSED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"revPrice\" <> '0' then \"revPrice\" end as \"revPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"revFunds\" <> '0' then \"revFunds\" end as \"revFunds\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"revFilled\" <> '0' then \"revFilled\" end as \"revFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reversed Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 26
                },
                "id": 17,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('CANCELED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1)\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Canceled Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 292
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 26
                },
                "id": 45,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "endedAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('CANCELED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"revPrice\" <> '0' then \"revPrice\" end as \"revPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"revFunds\" <> '0' then \"revFunds\" end as \"revFunds\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"revFilled\" <> '0' then \"revFilled\" end as \"revFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Canceled Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 32
                },
                "id": 15,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('BROKEN')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1)\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Broken Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 78
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 299
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "statusDetails"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 354
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 32
                },
                "id": 46,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "endedAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('BROKEN')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"statusDetails\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"revPrice\" <> '0' then \"revPrice\" end as \"revPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"revFunds\" <> '0' then \"revFunds\" end as \"revFunds\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"revFilled\" <> '0' then \"revFilled\" end as \"revFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Broken Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        },
                        {
                          "color": "semi-dark-red",
                          "value": 1
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 38
                },
                "id": 2,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1)\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Failed Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 80
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 294
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "statusDetails"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 416
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 38
                },
                "id": 47,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "endedAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t\twhere\n\t\t\t\t  data->>'status' in ('FAILED')\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"statusDetails\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"revPrice\" <> '0' then \"revPrice\" end as \"revPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"revFunds\" <> '0' then \"revFunds\" end as \"revFunds\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"revFilled\" <> '0' then \"revFilled\" end as \"revFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Failed Pairs",
                "type": "table"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "super-light-blue",
                          "value": null
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 340
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 4,
                  "x": 0,
                  "y": 44
                },
                "id": 4,
                "options": {
                  "colorMode": "value",
                  "graphMode": "none",
                  "justifyMode": "auto",
                  "orientation": "auto",
                  "reduceOptions": {
                    "calcs": [
                      "mean"
                    ],
                    "fields": "",
                    "values": false
                  },
                  "textMode": "auto"
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then LOCALTIMESTAMP\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then LOCALTIMESTAMP\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n  count(1)\nfrom \n  pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "All Pairs",
                "type": "stat"
              },
              {
                "datasource": null,
                "fieldConfig": {
                  "defaults": {
                    "custom": {
                      "align": null,
                      "displayMode": "auto",
                      "filterable": false
                    },
                    "decimals": 2,
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "createdAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 239
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "endedAt"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 241
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "buyFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 104
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 75
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "sellFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 98
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revPrice"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 76
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revQty"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 95
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFilled"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 93
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revStatus"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 77
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "fees"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 59
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 99
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "decimals",
                          "value": 8
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "btcUsdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 110
                        },
                        {
                          "id": "custom.align",
                          "value": "right"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "usdReturn"
                      },
                      "properties": [
                        {
                          "id": "noValue",
                          "value": "-"
                        },
                        {
                          "id": "custom.width",
                          "value": 103
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "direction"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 86
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "totalReturn"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 92
                        },
                        {
                          "id": "noValue",
                          "value": "-"
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "uuid"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 288
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "status"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 100
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byName",
                        "options": "revFunds"
                      },
                      "properties": [
                        {
                          "id": "custom.width",
                          "value": 102
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 6,
                  "w": 20,
                  "x": 4,
                  "y": 44
                },
                "id": 44,
                "options": {
                  "showHeader": true,
                  "sortBy": [
                    {
                      "desc": true,
                      "displayName": "createdAt"
                    }
                  ]
                },
                "pluginVersion": "7.3.5",
                "targets": [
                  {
                    "format": "table",
                    "group": [],
                    "metricColumn": "none",
                    "rawQuery": true,
                    "rawSql": "with pairs as (\n\tselect\n\t\t*,\n\t\t(\"btcReturn\" * \"firstPrice\") + \"usdReturn\" - (\"buyFees\" + \"sellFees\" + \"revFees\") as \"totalReturn\"\n\tfrom (\n\t\tselect\n\t\t\t*,\n\t\t\t\"buyFees\" + \"sellFees\" + \"revFees\" as \"fees\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then \"revFilled\" - \"buyFilled\" - \"sellFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then \"buyFilled\" - \"sellFilled\" - \"revFilled\"\n\t\t\t\telse 0\n\t\t\tend as \"btcReturn\",\n\t\t\tcase \n\t\t\t\twhen \"status\" = 'SUCCESS' then \"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'DOWN' then (\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\") - \"revPrice\" * \"revFilled\"\n\t\t\t\twhen \"status\" = 'REVERSED' and \"direction\" = 'UP' then (\"revPrice\" * \"revFilled\") - ABS(\"sellPrice\" * \"sellFilled\" - \"buyPrice\" * \"buyFilled\")\n\t\t\t\telse 0\n\t\t\tend as \"usdReturn\"\n\t\tfrom (\n\t\t\tselect\n\t\t\t\t*,\n\t\t\t\ttsrange(\"createdAt\", \"endedAt\") as \"timeslot\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstStatus\" else \"secondStatus\" end as \"buyStatus\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstPrice\" else \"secondPrice\" end as \"buyPrice\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstQty\" else \"secondQty\" end as \"buyQty\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFilled\" else \"secondFilled\" end as \"buyFilled\",\n\t\t\t\tcase when \"direction\" = 'UP' then \"firstFees\" else \"secondFees\" end as \"buyFees\",\n\t\t\t\t\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstStatus\" else \"secondStatus\" end as \"sellStatus\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstPrice\" else \"secondPrice\" end as \"sellPrice\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstQty\" else \"secondQty\" end as \"sellQty\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFilled\" else \"secondFilled\" end as \"sellFilled\",\n\t\t\t\tcase when \"direction\" = 'DOWN' then \"firstFees\" else \"secondFees\" end as \"sellFees\"\n\t\t\tfrom (\n\t\t\t\tselect\n\t\t\t\t\tuuid,\n\t\t\t\t\t(data->>'createdAt')::timestamp as \"createdAt\",\n\t\t\t\t\tcase\n\t\t\t\t\t\twhen data->>'endedAt' = '0001-01-01T00:00:00Z' then null\n\t\t\t\t\t\twhen data->>'status' = 'OPEN' then null\n\t\t\t\t\t\telse (data->>'endedAt')::timestamp\n\t\t\t\t\tend as \"endedAt\",\n\t\t\t\t\tdata->>'direction' as \"direction\",\n\t\t\t\t\tdata->>'status' as \"status\",\n\t\t\t\t\tdata->>'statusDetails' as \"statusDetails\",\n\t\t\t\t\tdata->'firstOrder'->>'status' as \"firstStatus\",\n\t\t\t\t\tdata->'secondOrder'->>'status' as \"secondStatus\",\n\t\t\t\t\tdata->'reversalOrder'->>'status' as \"revStatus\",\n\t\t\t\t\t(data->'firstRequest'->>'price')::decimal as \"firstPrice\",\n\t\t\t\t\t(data->'secondRequest'->>'price')::decimal as \"secondPrice\",\n\t\t\t\t\t(data->'reversalOrder'->'request'->>'price')::decimal as \"revPrice\",\n\t\t\t\t\t(data->'firstRequest'->>'quantity')::decimal as \"firstQty\",\n\t\t\t\t\t(data->'secondRequest'->>'quantity')::decimal as \"secondQty\",\n\t\t\t\t\t(data->'reversalRequest'->>'funds')::decimal as \"revFunds\",\n\t\t\t\t\t(data->'firstOrder'->>'filled')::decimal as \"firstFilled\",\n\t\t\t\t\t(data->'secondOrder'->>'filled')::decimal as \"secondFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'filled')::decimal as \"revFilled\",\n\t\t\t\t\t(data->'reversalOrder'->>'fees')::decimal as \"revFees\",\n\t\t\t\t\t(data->'secondOrder'->>'fees')::decimal as \"secondFees\",\n\t\t\t\t\t(data->'firstOrder'->>'fees')::decimal as \"firstFees\"\n\t\t\t\tfrom\n\t\t\t\t\torderpairs\n\t\t\t) as raw_pairs\n\t\t) as pair_returns\n\t\twhere\n\t\t\ttimeslot && tsrange($__timeFrom(), $__timeTo())\n\t) as total_returns\n)\nselect\n    \"uuid\",\n    \"createdAt\",\n    \"endedAt\",\n    \"status\",\n    \"direction\",\n    case when \"buyPrice\" <> '0' then \"buyPrice\" end as \"buyPrice\",\n    case when \"sellPrice\" <> '0' then \"sellPrice\" end as \"sellPrice\",\n    case when \"revPrice\" <> '0' then \"revPrice\" end as \"revPrice\",\n    case when \"buyQty\" <> '0' then \"buyQty\" end as \"buyQty\",\n    case when \"sellQty\" <> '0' then \"sellQty\" end as \"sellQty\",\n    case when \"revFunds\" <> '0' then \"revFunds\" end as \"revFunds\",\n    case when \"buyFilled\" <> '0' then \"buyFilled\" end as \"buyFilled\",\n    case when \"sellFilled\" <> '0' then \"sellFilled\" end as \"sellFilled\",\n    case when \"revFilled\" <> '0' then \"revFilled\" end as \"revFilled\",\n    case when \"btcReturn\"<> '0' then \"btcReturn\" end as \"btcReturn\",\n    case when (\"btcReturn\" * \"firstPrice\") <> '0' then (\"btcReturn\" * \"firstPrice\") end as \"btcUsdReturn\",\n    case when \"usdReturn\" <> '0' then \"usdReturn\" end as \"usdReturn\",\n    case when \"fees\" <> '0' then \"fees\" end as \"fees\",\n    case when (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees <> 0 then (\"usdReturn\") + (\"btcReturn\" * \"firstPrice\") - fees end as \"totalReturn\"\nfrom pairs",
                    "refId": "A",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "column"
                        }
                      ]
                    ],
                    "timeColumn": "time",
                    "where": [
                      {
                        "name": "$__timeFilter",
                        "params": [],
                        "type": "macro"
                      }
                    ]
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "All Pairs",
                "type": "table"
              }
            ],
            "refresh": "30s",
            "schemaVersion": 26,
            "style": "dark",
            "tags": [],
            "templating": {
              "list": []
            },
            "time": {
              "from": "now-24h",
              "to": "now"
            },
            "timepicker": {
              "refresh_intervals": [
                "1s",
                "5s",
                "10s",
                "30s",
                "1m"
              ]
            },
            "timezone": "",
            "title": "Moneytree - Pairs",
            "uid": "DWp2nYEMk",
            "version": 1
          }